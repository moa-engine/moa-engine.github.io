import { CompilationResult, Compiler, CompilerConfigInterface } from './Compiler';
export interface RuntimeConfigInterface {
    dev?: boolean;
    compiler?: CompilerConfigInterface;
    repaintTimeout?: number;
}
export interface RuntimeHooksListInterface {
    'stylify:ready': Runtime;
    'stylify:configured': {
        config: RuntimeConfigInterface;
    };
    'stylify:repainted': {
        css: string;
        compilationResult: CompilationResult;
        content: string;
    };
    'stylify:uncloak': {
        el: HTMLElement;
    };
}
export declare class Runtime {
    static readonly styleElId: string;
    static readonly ignoreClass = "stylify-ignore";
    static readonly cloakClass: string;
    dev: boolean;
    compiler: Compiler;
    hooks: import("./Hooks").Hooks<import("./Hooks").DefaultHooksListInterface>;
    compilationResult: CompilationResult;
    private initialPaintCompleted;
    private mutationObserverInitialized;
    repaintTimeout: number;
    constructor(config?: RuntimeConfigInterface);
    configure(config: RuntimeConfigInterface): void;
    private init;
    private updateCss;
    initMutationObserver(): void;
    injectCss(css: string): void;
}
