import { CompilationResultHooksListInterface, CompilerHooksListInterface, CssRecordHooksListInterface } from './Compiler';
import { RuntimeHooksListInterface } from './Runtime';
type HookCallbackType<HookDataType = any> = (data: HookDataType) => void | Promise<HookDataType>;
export interface DefaultHooksListInterface extends CompilationResultHooksListInterface, CompilerHooksListInterface, CssRecordHooksListInterface, RuntimeHooksListInterface {
}
export type DefaultHooksNamesListType = keyof DefaultHooksListInterface;
export declare class Hooks<HooksList> {
    addListener<HookName extends keyof HooksList, HookData = HooksList[HookName]>(hookName: HookName, callback: HookCallbackType<HookData>): void;
    callHook<HookName extends keyof HooksList, HookData = HooksList[HookName]>(hookName: HookName, data: HookData): HookData;
    callAsyncHook<HookName extends keyof HooksList, HookData = HooksList[HookName]>(hookName: HookName, data: HookData): Promise<HookData>;
    private createHookData;
}
export declare const hooks: Hooks<DefaultHooksListInterface>;
export {};
